---
source: tests/parser.rs
expression: out
---
ParserReturn { program: Program { span: Span { start: 0, end: 20 }, source: "(v.a = 1; v.b = 2;);", is_complex: true, body: [Expression(Parenthesized(Complex { span: Span { start: 0, end: 19 }, statements: [Assignment(AssignmentStatement { span: Span { start: 1, end: 8 }, left: VariableExpression { span: Span { start: 1, end: 4 }, lifetime: Variable, member: Property { span: Span { start: 1, end: 4 }, property: IdentifierReference { span: Span { start: 3, end: 4 }, name: "a" } } }, right: NumericLiteral(NumericLiteral { span: Span { start: 7, end: 8 }, value: 1.0, raw: "1" }) }), Assignment(AssignmentStatement { span: Span { start: 10, end: 17 }, left: VariableExpression { span: Span { start: 10, end: 13 }, lifetime: Variable, member: Property { span: Span { start: 10, end: 13 }, property: IdentifierReference { span: Span { start: 12, end: 13 }, name: "b" } } }, right: NumericLiteral(NumericLiteral { span: Span { start: 16, end: 17 }, value: 2.0, raw: "2" }) })] }))] }, errors: [], panicked: false }
