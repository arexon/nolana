---
source: tests/parser.rs
expression: out
---
ParseResult {
    program: Program {
        span: Span {
            start: 0,
            end: 9,
        },
        source: "!(1 && 0)",
        body: Simple(
            Unary(
                UnaryExpression {
                    span: Span {
                        start: 0,
                        end: 9,
                    },
                    operator: Not,
                    argument: Parenthesized(
                        Single {
                            span: Span {
                                start: 1,
                                end: 9,
                            },
                            expression: Binary(
                                BinaryExpression {
                                    span: Span {
                                        start: 2,
                                        end: 8,
                                    },
                                    left: NumericLiteral(
                                        NumericLiteral {
                                            span: Span {
                                                start: 2,
                                                end: 3,
                                            },
                                            value: 1.0,
                                            raw: "1",
                                        },
                                    ),
                                    operator: And,
                                    right: NumericLiteral(
                                        NumericLiteral {
                                            span: Span {
                                                start: 7,
                                                end: 8,
                                            },
                                            value: 0.0,
                                            raw: "0",
                                        },
                                    ),
                                },
                            ),
                        },
                    ),
                },
            ),
        ),
    },
    errors: [],
    panicked: false,
}
