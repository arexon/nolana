---
source: tests/parser.rs
---
ParserReturn {
    program: Program {
        span: Span {
            start: 0,
            end: 9,
        },
        source: "1 + 2 * 3",
        is_complex: false,
        body: [
            Binary(
                BinaryExpression {
                    span: Span {
                        start: 0,
                        end: 9,
                    },
                    left: NumericLiteral(
                        NumericLiteral {
                            span: Span {
                                start: 0,
                                end: 1,
                            },
                            value: 1.0,
                            raw: "1",
                        },
                    ),
                    operator: Addition,
                    right: Binary(
                        BinaryExpression {
                            span: Span {
                                start: 4,
                                end: 9,
                            },
                            left: NumericLiteral(
                                NumericLiteral {
                                    span: Span {
                                        start: 4,
                                        end: 5,
                                    },
                                    value: 2.0,
                                    raw: "2",
                                },
                            ),
                            operator: Multiplication,
                            right: NumericLiteral(
                                NumericLiteral {
                                    span: Span {
                                        start: 8,
                                        end: 9,
                                    },
                                    value: 3.0,
                                    raw: "3",
                                },
                            ),
                        },
                    ),
                },
            ),
        ],
    },
    errors: [],
    panicked: false,
}
